# ---------------------------
# -------- TRAEFIK ----------

HTTP_PORT=80
#HTTPS_PORT=8443

ENABLE_TRAEFIK_UI=true
TRAEFIK_UI_PORT=8080

ENABLE_TRAEFIK_LOG=true
TRAEFIK_LOG_LEVEL=DEBUG



# ---------------------------
# -------- GENERIC ----------

PROJECT_NAME=ginco

ENVIRONMENT=preprod

TRAEFIK_NETWORK=traefik-ginco-depobio-preprod

#ACME_EMAIL="" # required for valid https certificates



# ---------------------------
# ------- COMPOSE GN --------

APP=ginco-nationale

INSTANCE_SUB_FOLDER=nationale/

BASE_PROTOCOL=http

#HOST=preprod-swarm-0.patnat.mnhn.fr
#HOSTPORT="${HOST}"  # set to ${HOST}:${HTTPS_PORT} if HTTPS_PORT is different from 443

#UID=1000
#GID=1000

GEONATURE_SUPERGRANT_ARGS=--group --nom Grp_admin

GEONATURE_DB_LOCAL_SRID=4326
GEONATURE_DB_ADD_SAMPLE_DATA=false
GEONATURE_DB_INSTALL_BDC_STATUTS=true
GEONATURE_DB_INSTALL_SIG_LAYERS=true
GEONATURE_DB_INSTALL_GRID_LAYER=true
GEONATURE_DB_INSTALL_REF_SENSITIVITY=true
GEONATURE_DB_INSTALL_USERSHUB_SAMPLES=true
GEONATURE_DB_INSTALL_TAXHUB_SAMPLES=true

GEONATURE_SKIP_POPULATE_DB=false

POSTGRES_USER=geonatadmin
POSTGRES_PASSWORD=geonatpasswd
POSTGRES_HOST=postgres
POSTGRES_DB=geonature2db
POSTGRES_PORT_PUBLISHED=5432

USERSHUB_IMAGE=ghcr.io/pnx-si/usershub:2.4.3
USERSHUB_PROTOCOL=http
USERSHUB_HOST=preprod-swarm-0.patnat.mnhn.fr
USERSHUB_HOSTPORT=preprod-swarm-0.patnat.mnhn.fr
USERSHUB_PREFIX=/ginco-nationale-preprod/usershub

TAXHUB_IMAGE=ghcr.io/pnx-si/taxhub:1.14.1
TAXHUB_PROTOCOL=http
TAXHUB_HOST=preprod-swarm-0.patnat.mnhn.fr
TAXHUB_HOSTPORT=preprod-swarm-0.patnat.mnhn.fr
TAXHUB_PREFIX=/ginco-nationale-preprod/taxhub
TAXHUB_API_PREFIX=/ginco-nationale-preprod/taxhub/api

GEONATURE_BACKEND_EXTRA_IMAGE=ghcr.io/pnx-si/geonature-backend-extra@sha256:1f894b0d53807ee2415df6e36610fc7ef951a10859c1adf1899226051e82bdf8
GEONATURE_BACKEND_PROTOCOL=http
GEONATURE_BACKEND_HOST=preprod-swarm-0.patnat.mnhn.fr
GEONATURE_BACKEND_HOSTPORT=preprod-swarm-0.patnat.mnhn.fr
GEONATURE_BACKEND_PREFIX=/ginco-nationale-preprod/geonature/api

GEONATURE_FRONTEND_EXTRA_IMAGE=ghcr.io/pnx-si/geonature-frontend-extra:2.14.2
GEONATURE_FRONTEND_PROTOCOL=http
GEONATURE_FRONTEND_HOST=preprod-swarm-0.patnat.mnhn.fr
GEONATURE_FRONTEND_HOSTPORT=preprod-swarm-0.patnat.mnhn.fr
GEONATURE_FRONTEND_PREFIX=/ginco-nationale-preprod/geonature

# - Resources

# CPUs
# TOTAL: 7 to 9.5 as a starting point
# CURRENT: 10
#-----
# GUNICORN: nb_cpus = (nb_workers * nb_threads - 1)/2
#-
# POSTGRES: depends on complexity of processed queries and level of concurrency
#         recommended: 1 as a starting point
#         recommended: 2 or more, for higher concurrency or complex query workloads
#-
# REDIS: Redis is single-threaded by design, meaning it can only utilize a single CPU core at a time
#        CPU usage is low for a Redis message broker (broker for Celery worker)
#        depends on overall system load and number of concurrent connections to Redis
#        recommended: 0.5 to 1 as a starting point
#-
# CELERY: the number of CPUs give the number of workers that are actually started
#         recommended: 1 to 2 CPUs as a starting point
#-
# NGINX: Nginx serving static files is not CPU-intensive. 
#        actually depends on the expected traffic and usage patterns
#        recommended: 0.5 CPUs as a starting point
#---
# GUNICORN: (2 * 2 - 1)/2 = 1.5
GEONATURE_INSTALL_DB_CPUS=1.5
# POSTGRES: 1, as a starting point
#           2 or more, to  improve Synthese performance
POSTGRES_CPUS=4
# REDIS: 0.5, as a starting point
REDIS_CPUS=0.5
# CELERY: 1, as a starting point
GEONATURE_WORKER_CPUS=1
# GUNICORN: (2 * 2 - 1)/2 = 1.5
GEONATURE_BACKEND_CPUS=1.5
# NGINX: 0.5, as a starting point
GEONATURE_FRONTEND_CPUS=0.5
# GUNICORN: (1 * 1 - 1)/2 = 0 --> 0.5
TAXHUB_CPUS=0.5
# GUNICORN: (1 * 1 - 1)/2 = 0 --> 0.5
USERSHUB_CPUS=0.5

# Memory
# TOTAL: 5.25 to 8 GB, as a starting point
# CURRENT: 10.25 GB
#-------
# GUNICORN: 
#        recommended: at least 256m per worker as a starting point
#-
# POSTGRES: depends on the size of datasets and the complexity of queries
#        recommended: 2g to 4g, as a starting point
#        // must adjust PostgreSQL configuration accordingly:
#           - shared_buffers = 25% * memory --> PostgreSQL caching
#               default: 128MB
#               with 4g: 25% * 4g = 1GB            
#           - work_mem --> internal sort operations and hash tables before writing to temporary disk files
#               // number of concurrent operations and memory available
#               default: 4MB
#               with 4g: 16MB
#           - maintenance_work_mem --> maintenance operations like `VACUUM` and `CREATE INDEX`
#               // size of datasets and indexes
#               default: 64MB
#               with 4g: 128MB
#           - effective_cache_size = 50 to 75% * memory --> disk caching by the operating system and within the database itself
#               default: 4GB
#               with 4g: 75% * 4g = 3GB
#-
# REDIS: depends on the number of tasks in the queue,
#           the size of the messages being sent,
#           and any other data stores in Redis (such as result backend data if configured)
#        recommended: 512m as a starting point
# CELERY: 
#        recommended: 512m to 1g per worker as a starting point
#-
# NGINX: Nginx serving static files requires minimal memory
#        recommended: 256m to 512m as a starting point
#---
# GUNICORN: (256m * 2) = 512m, as a starting point
GEONATURE_INSTALL_DB_MEMORY=512m
# POSTGRES: 2g, as a starting point
#           4g, to try improve Synthese performance // but PostgreSQL certainly must be configured
POSTGRES_MEMORY=4g
# REDIS: 512m, as a starting point
REDIS_MEMORY=512m
# CELERY: (512m * 1) = 512m, as a starting point
GEONATURE_WORKER_MEMORY=512m
# GUNICORN: (256m * 2) = 512m, as a starting point
GEONATURE_BACKEND_MEMORY=4g
# NGINX: 256m, as a starting point
GEONATURE_FRONTEND_MEMORY=256m
# GUNICORN: (256m * 1) = 256m, as a starting point
TAXHUB_MEMORY=256m
# GUNICORN: (256m * 1) = 256m, as a starting point
USERSHUB_MEMORY=256m

# PostgreSQL configuration
# shared_buffers: 
#   default: 128MB
#   recommended: 25% * POSTGRES_MEMORY
POSTGRES_SHARED_BUFFERS=1GB
# work_mem:
#   default: 4MB
#   recommended: no more than 25% to 33% of POSTGRES_MEMORY
#                (25% * POSTGRES_MEMORY) / (nb_concurrent_connections * nb_concurrent_sort_and_hash_operations_by_connection)
#   current: (25% * 2GB) / (50 * 2) = 5MB
POSTGRES_WORK_MEM=10MB
# maintenance_work_mem:
#   default: 64MB
#   recommended: 5% to 10% of POSTGRES_MEMORY
#   current: 10% * 2 = 200MB
POSTGRES_MAINTENANCE_WORK_MEM=400MB
# effective_cache_size:
#   default: 4GB
#   recommended: 75% * POSTGRES_MEMORY
#   current: 75% * 2 = 1.5GB
POSTGRES_EFFECTIVE_CACHE_SIZE=3GB

# Celery configuration
# concurrency:
#   /!\ default (if not specified in the Celery command): number of CPU cores on the host 
#   recommended: 1 as a starting point
#                should be chosen given the memory and CPUs allocated to the service `geonature-worker` 
#                   and the expected number, nature and complexity of the concurrent tasks.
#                may be deduced as (where ⌊.⌋ is the floor function): ⌊(REDIS_MEMORY / 250m)⌋
#   current: 1
CELERY_CONCURRENCY=1

# ---------------------------
# --------- EXTRA -----------

# Used to build the images (see "./build/build.sh")
GEONATURE_BACKEND_IMAGE="ghcr.io/pnx-si/geonature-backend:latest"
GEONATURE_FRONTEND_IMAGE="ghcr.io/pnx-si/geonature-frontend:latest"

#ATLAS_IMAGE=ghcr.io/pnx-si/geonature-atlas:1.60
# ATLAS_INSTALL_SCHEMA=false
# ATLAS_RESET_SCHEMA=false

# Initialisation base de données
# GEONATURE_SKIP_POPULATE_DB=true


# Nom de domaine
# DOMAIN="mondomaine.org"

# prefixe pour le nom des container
PROJECT_NAME=gds
CONTAINER_NAME_PREFIX=${PROJECT_NAME}-

# prefixe pour les url des applications
APPLICATIONS_PREFIX=""

# répertoire de base pour les volumes des services (data + config)
# VOLUME_DATA_DIRECTORY=./data

# - volumes
# VOLUME_DATA_SERVICES_DIRECTORY="${VOLUME_DATA_DIRECTORY}/services"
# VOLUME_DATA_STORAGE_DIRECTORY="${VOLUME_DATA_DIRECTORY}/storage"

# - accès bdd flask sqlalchemy
# SQLALCHEMY_DATABASE_URI="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"


# - taxhub

# TAXHUB_DOMAIN=${DOMAIN}
# TAXHUB_HOST=${TAXHUB_DOMAIN}
# TAXHUB_BASE_URL=${BASE_PROTOCOL}://${TAXHUB_HOST}
# TAXHUB_PREFIX="${APPLICATIONS_PREFIX}/taxhub"
# TAXHUB_URL_APPLICATION="${TAXHUB_BASE_URL}${TAXHUB_PREFIX}"

# - pgadmin

# Accès pgadmin
PGADMIN_DEFAULT_EMAIL=geon@tu.re
PGADMIN_DEFAULT_PASSWORD=geonature

# PGADMIN_DOMAIN="${DOMAIN}"
# PGADMIN_HOST=${PGADMIN_DOMAIN}
# PGADMIN_BASE_URL=${BASE_PROTOCOL}://${PGADMIN_HOST}

PGADMIN_IMAGE=dpage/pgadmin4:7.5
PGADMIN_CONTAINER_NAME=${CONTAINER_NAME_PREFIX}pg_admin
# PGADMIN_VOLUME_DATA_DIRECTORY="${VOLUME_DATA_STORAGE_DIRECTORY}/pgadmin"
PGADMIN_PREFIX="${APPLICATIONS_PREFIX}/admin4pg"

# - atlas

ATLAS_DOMAIN=${DOMAIN}
ATLAS_HOST=${ATLAS_DOMAIN}
ATLAS_BASE_URL=${BASE_PROTOCOL}://${ATLAS_HOST}

ATLAS_CONTAINER_NAME=${CONTAINER_NAME_PREFIX}atlas
ATLAS_VOLUME_CONFIG_DIRECTORY="${VOLUME_DATA_SERVICES_DIRECTORY}/atlas/config" # dossier de configuration atlas
ATLAS_VOLUME_CUSTOM_DIRECTORY="${VOLUME_DATA_SERVICES_DIRECTORY}/atlas/custom" # dossier custom atlas
ATLAS_PREFIX="${APPLICATIONS_PREFIX}/atlas"
ATLAS_URL_APPLICATION=${ATLAS_BASE_URL}${ATLAS_PREFIX}
ATLAS_SQLALCHEMY_DATABASE_URI="${SQLALCHEMY_DATABASE_URI}"
ATLAS_APPLICATION_ROOT=${ATLAS_PREFIX}
ATLAS_REMOTE_MEDIAS_URL=${TAXHUB_URL_APPLICATION}/
ATLAS_TAXHUB_URL=${TAXHUB_URL_APPLICATION}
ATLAS_REDIMENSIONNEMENT_IMAGE=true

ATLAS_ALTITUDES="(0 500 1000 1500 2000 2500 3000 3500 4000)"
ATLAS_TYPE_TERRITOIRE="'PEC'"
ATLAS_TYPE_MAILLE="'M1'"